# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # #                                     DO NOT EDIT!!                                     # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Climate component
external_components:
  - source:
      url: https://github.com/I-am-nightingale/tclac.git
      type: git
      ref: master
    components: [tclac]
    refresh: 30s

# ESPHome Configuration
esphome:
  name: ${device_name}
  min_version: 2023.3.0
  friendly_name: ${friendly_name}
  on_boot:
    priority: -100
    then:
      lambda: !lambda |-
        id(${device_name}climate).set_beeper_state(false);
        id(${device_name}climate).set_force_mode_state(false);

        if (id(display_mode).state) {
          id(${device_name}climate).set_display_state(true);
        } else {
          id(${device_name}climate).set_display_state(false);
        }
        if (id(ledflash_mode).state) {
          id(${device_name}climate).set_module_display_state(true);
        } else {
          id(${device_name}climate).set_module_display_state(false);
        }

        if (id(vswing).active_index() == 0) {
          id(${device_name}climate)
              .set_vertical_swing_direction(
                  esphome::tclac::VerticalSwingDirection::UP_DOWN);
        } else if (id(vswing).active_index() == 1) {
          id(${device_name}climate)
              .set_vertical_swing_direction(
                  esphome::tclac::VerticalSwingDirection::UPSIDE);
        } else if (id(vswing).active_index() == 2) {
          id(${device_name}climate)
              .set_vertical_swing_direction(
                  esphome::tclac::VerticalSwingDirection::DOWNSIDE);
        }

        if (id(hswing).active_index() == 0) {
          id(${device_name}climate)
              .set_horizontal_swing_direction(
                  esphome::tclac::HorizontalSwingDirection::LEFT_RIGHT);
        } else if (id(hswing).active_index() == 1) {
          id(${device_name}climate)
              .set_horizontal_swing_direction(
                  esphome::tclac::HorizontalSwingDirection::LEFTSIDE);
        } else if (id(hswing).active_index() == 2) {
          id(${device_name}climate)
              .set_horizontal_swing_direction(
                  esphome::tclac::HorizontalSwingDirection::CENTER);
        } else if (id(hswing).active_index() == 3) {
          id(${device_name}climate)
              .set_horizontal_swing_direction(
                  esphome::tclac::HorizontalSwingDirection::RIGHTSIDE);
        }

        if (id(vfixing).active_index() == 0) {
          id(${device_name}climate)
              .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::LAST);
        } else if (id(vfixing).active_index() == 1) {
          id(${device_name}climate)
              .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_UP);
        } else if (id(vfixing).active_index() == 2) {
          id(${device_name}climate)
              .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::UP);
        } else if (id(vfixing).active_index() == 3) {
          id(${device_name}climate)
              .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::CENTER);
        } else if (id(vfixing).active_index() == 4) {
          id(${device_name}climate)
              .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::DOWN);
        } else if (id(vfixing).active_index() == 5) {
          id(${device_name}climate)
              .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_DOWN);
        }

        if (id(hfixing).active_index() == 0) {
          id(${device_name}climate)
              .set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::LAST);
        } else if (id(hfixing).active_index() == 1) {
          id(${device_name}climate)
              .set_horizontal_airflow(
                  esphome::tclac::AirflowHorizontalDirection::MAX_LEFT);
        } else if (id(hfixing).active_index() == 2) {
          id(${device_name}climate)
              .set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::LEFT);
        } else if (id(hfixing).active_index() == 3) {
          id(${device_name}climate)
              .set_horizontal_airflow(
                  esphome::tclac::AirflowHorizontalDirection::CENTER);
        } else if (id(hfixing).active_index() == 4) {
          id(${device_name}climate)
              .set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::RIGHT);
        } else if (id(hfixing).active_index() == 5) {
          id(${device_name}climate)
              .set_horizontal_airflow(
                  esphome::tclac::AirflowHorizontalDirection::MAX_RIGHT);
        }
        if (id(beep_mode).state) {
          id(${device_name}climate).set_beeper_state(true);
        } else {
          id(${device_name}climate).set_beeper_state(false);
        }
        if (id(force_mode).state) {
          id(${device_name}climate).set_force_mode_state(true);
        } else {
          id(${device_name}climate).set_force_mode_state(false);
        }

uart:
  baud_rate: 9600
  data_bits: 8
  parity: EVEN
  stop_bits: 1
  rx_pin: ${uart_rx}
  tx_pin: ${uart_tx}

api:
  encryption:
    key: "${api_key}"

ota:
  - platform: esphome
    password: "${ota_pass}"

wifi:
  id: "${device_name}_wifi"
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: "${device_name} Fallback Hotspot"
    password: "${recovery_pass}"

captive_portal:

# ALWAYS disable UART logging
logger:
  baud_rate: 0

# Device settings section:
# - Switches
switch:
  # Beeper for command confirmation, off by default
  - name: Beeper
    platform: template
    device_class: switch
    id: beep_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_beeper_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_beeper_state(false);

  # Temperature setpoint display on the indoor unit body, on by default
  - name: Display
    platform: template
    device_class: switch
    id: display_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_display_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_display_state(false);

  # LED indication of data exchange with the air conditioner, off by default
  - name: Display on module
    platform: template
    device_class: switch
    id: ledflash_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_module_display_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_module_display_state(false);

  - name: Force config
    platform: template
    device_class: switch
    id: force_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_force_mode_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_force_mode_state(false);

# - Dropdown lists
select:
  # Vertical swing setting
  - platform: template
    name: Vertical swing
    id: vswing
    entity_category: config
    options:
      - "From top to bottom"
      - "In the upper half"
      - "In the lower half"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(vswing).active_index() == 0) {
            id(${device_name}climate)
                .set_vertical_swing_direction(
                    esphome::tclac::VerticalSwingDirection::UP_DOWN);
          } else if (id(vswing).active_index() == 1) {
            id(${device_name}climate)
                .set_vertical_swing_direction(
                    esphome::tclac::VerticalSwingDirection::UPSIDE);
          } else if (id(vswing).active_index() == 2) {
            id(${device_name}climate)
                .set_vertical_swing_direction(
                    esphome::tclac::VerticalSwingDirection::DOWNSIDE);
          }

  # Horizontal swing setting
  - platform: template
    name: Horizontal swing
    id: hswing
    entity_category: config
    options:
      - "From left to right"
      - "In the left area"
      - "In the center"
      - "In the right area"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(hswing).active_index() == 0) {
            id(${device_name}climate)
                .set_horizontal_swing_direction(
                    esphome::tclac::HorizontalSwingDirection::LEFT_RIGHT);
          } else if (id(hswing).active_index() == 1) {
            id(${device_name}climate)
                .set_horizontal_swing_direction(
                    esphome::tclac::HorizontalSwingDirection::LEFTSIDE);
          } else if (id(hswing).active_index() == 2) {
            id(${device_name}climate)
                .set_horizontal_swing_direction(
                    esphome::tclac::HorizontalSwingDirection::CENTER);
          } else if (id(hswing).active_index() == 3) {
            id(${device_name}climate)
                .set_horizontal_swing_direction(
                    esphome::tclac::HorizontalSwingDirection::RIGHTSIDE);
          }

  # Vertical vane fixing setting
  - platform: template
    name: Vertical fixing
    id: vfixing
    entity_category: config
    options:
      - "Last position"
      - "All the way up"
      - "In the upper half"
      - "In the middle"
      - "In the lower half"
      - "All the way down"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(vfixing).active_index() == 0) {
            id(${device_name}climate)
                .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::LAST);
          } else if (id(vfixing).active_index() == 1) {
            id(${device_name}climate)
                .set_vertical_airflow(
                    esphome::tclac::AirflowVerticalDirection::MAX_UP);
          } else if (id(vfixing).active_index() == 2) {
            id(${device_name}climate)
                .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::UP);
          } else if (id(vfixing).active_index() == 3) {
            id(${device_name}climate)
                .set_vertical_airflow(
                    esphome::tclac::AirflowVerticalDirection::CENTER);
          } else if (id(vfixing).active_index() == 4) {
            id(${device_name}climate)
                .set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::DOWN);
          } else if (id(vfixing).active_index() == 5) {
            id(${device_name}climate)
                .set_vertical_airflow(
                    esphome::tclac::AirflowVerticalDirection::MAX_DOWN);
          }

  # Horizontal vane fixing setting
  - platform: template
    name: Horizontal fixing
    id: hfixing
    entity_category: config
    options:
      - "Last position"
      - "All the way left"
      - "In the left half"
      - "In the middle"
      - "In the right half"
      - "All the way right"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(hfixing).active_index() == 0) {
            id(${device_name}climate)
                .set_horizontal_airflow(
                    esphome::tclac::AirflowHorizontalDirection::LAST);
          } else if (id(hfixing).active_index() == 1) {
            id(${device_name}climate)
                .set_horizontal_airflow(
                    esphome::tclac::AirflowHorizontalDirection::MAX_LEFT);
          } else if (id(hfixing).active_index() == 2) {
            id(${device_name}climate)
                .set_horizontal_airflow(
                    esphome::tclac::AirflowHorizontalDirection::LEFT);
          } else if (id(hfixing).active_index() == 3) {
            id(${device_name}climate)
                .set_horizontal_airflow(
                    esphome::tclac::AirflowHorizontalDirection::CENTER);
          } else if (id(hfixing).active_index() == 4) {
            id(${device_name}climate)
                .set_horizontal_airflow(
                    esphome::tclac::AirflowHorizontalDirection::RIGHT);
          } else if (id(hfixing).active_index() == 5) {
            id(${device_name}climate)
                .set_horizontal_airflow(
                    esphome::tclac::AirflowHorizontalDirection::MAX_RIGHT);
          }

climate:
  - platform: tclac
    name: "${friendly_name}"
    id: ${device_name}climate
